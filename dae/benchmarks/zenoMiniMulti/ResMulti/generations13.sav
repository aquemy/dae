\section{Parser}

######                 General    ######
# --help=0                                 # -h : Prints this message
# --stopOnUnknownParam=1                   # Stop if unkown param entered
# --seed=1129130130                        # -S : Random number seed

######    Evolution Engine        ######
--popSize=50                             # -P : Population Size
# --selCrit=NSGA-II                        # -S : Pareto Selection Criterion: NSGA, NSGA-II, ParetoRanking
# --nicheSize=1                            # Size of niche for NSGA-I
# --selection=DetTour(2)                   # -S : Selection: Roulette, DetTour(T), StochTour(t) or Random
# --nbOffspring=100%                       # -O : Nb of offspring (percentage or absolute)

######    Output                  ######
# --useEval=1                              # Use nb of eval. as counter (vs nb of gen.)
# --printPop=0                             # Print sorted pop. every gen.

######    Output - Disk           ######
--resCPT=resCPTMulti                     # Directory where to store CPT intermediate files
--resDir=ResMulti                        # Directory to store DISK outputs
# --eraseDir=1                             # erase files in dirName if any
# --frontFileFrequency=1(0,1)              # File save frequency in objective spaces (std::pairs of comma-separated objectives in 1 single parentheses std::pair)

######    Output - Graphical      ######
# --plotFront=0                            # Objective plots (requires corresponding files - see frontFileFrequency

######    Persistence             ######
# --Load=                                  # -L : A save file to restart from
# --recomputeFitness=0                     # -r : Recompute the fitness after re-loading the pop.?
--saveFrequency=1                        # Save every F generation (0 = only final state, absent = never)
# --saveTimeInterval=0                     # Save every T seconds (0 or absent = never)
# --status=multiTGV.status                 # Status file

######    Stopping criterion      ######
--maxGen=50                              # -G : Maximum number of generations () = none)
--CtrlC=1                                # -C : Terminate current generation upon Ctrl C

######    TGV                     ######
--typeRisk=2                             # Risk computation from partial values (0=risk after compression, 1=max of partial risks, 2=avg of partial risks)
--typeMakespan=1                         # Makespan computation from partial values: 0=global only, 1=sum(partial), 2=0+1
# --factRisk=10                            # Multiplcative factor for the risk (w.r.t. penalty for failures)
# --factMakespan=1                         # Multiplcative factor for the makespan (w.r.t. penalty for failures)
# --useGlobalGoal=1                        # Use Global goal to define the intermediate stations (1) or not (0)

######    TGV - Variation Operators    ######
# --mutAtMutRate=1                         # Relative rate for AT mutation
# --mutFailMutRate=1                       # Relative rate for Fail mutation
# --weightModifyPredicateMutation=3        # Relative weight of 'modify' mutation inside eoTGVAtMutation
# --weightAddPredicateMutation=1           # Relative weight of 'add' mutation inside eoTGVAtMutation
# --weightRemovePredicateMutation=1        # Relative weight of 'remove' mutation inside eoTGVAtMutation
# --weightModifyPredicateMutation=3        # Relative weight of 'modify' mutation inside eoTGVAtMutation
# --weightAddPredicateMutation=1           # Relative weight of 'add' mutation inside eoTGVAtMutation
# --weightRemovePredicateMutation=1        # Relative weight of 'remove' mutation inside eoTGVAtMutation

######    TGV - general           ######
# --debug=0                                # Level of output (0 = nothing)

######    TGV - init              ######
# --minSize=2                              # -m : Minimal size at init
# --maxSize=10                             # -M : Maximal size at init
# --maxDist=3                              # -d : Maximal distance between stations
# --avgNbAtChange=1.5                      # Avg number of changes fir each predicates in atInit (>1)
# --pAddRemovePredicate=0.2                # Probability to change the 'present' state in init and mutation

######    TGV - problem           ######
--csFile=commonSenseZeno.tgv             # Name of the 'CommonSense' file
--attFile=DataMulti/attributeSpacesZenoMiniMulti.tgv # Name of the attributeSpaces file
# --reachableFile=                         # Name of the reachableValue file (empty string if none)
--instanceName=DataMulti/zenoMiniMulti.pddl # Name of the instance (PDDL file)
--domain=DataMulti/domain-zeno-time-miniRISK-Sym.pddl # Name of the domain PDDL file
--nbBackTrackMax=1000                    # Max Nb of BackTtracks (CPT option -bk)
--boundSub=0                             # Bound for suboptimal search (CPT option -sub)
# --maxRisk=3                              # Max level of Risk (in case of failure)
# --useCausals=1                           # Use causals during final compression?
# --useActions=0                           # Use all actions of intermediate solution when compressing?

######    Variation Operators     ######
# --typeAppliOp=PropGA                     # Apply cross and mut Proportionally (PropGA) or sequentially (the standard SGA)
# --wCross=1                               # -C : Weight of Crossover
# --wMut=1                                 # -M : Weight of Mutation
# --wClone=1                               # -L : Weight of Clone operator

\section{eoPop}
50
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 5
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person1) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person3) [4] [10]
6: (fly plane1 city1 city4 person2) [2] [100]
8: (fly plane2 city2 city4 person3) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 4 10 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person3) [2] [100]
0: (fly plane1 city0 city2 person1) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person2) [2] [100]
4: (fly plane1 city2 city4 person1) [4] [10]
6: (fly plane2 city1 city4 person3) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person2) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city4 absent)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 8 100 8
Goal      -> 0 0 0
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city2)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 4 10 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person3) [2] [100]
0: (fly plane1 city0 city2 person2) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person2) [4] [10]
6: (fly plane2 city1 city4 person3) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city2)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 4 10 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person3) [2] [100]
0: (fly plane1 city0 city2 person2) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person2) [4] [10]
6: (fly plane2 city1 city4 person3) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person3) [2] [100]
0: (fly plane1 city0 city2 person1) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person2) [2] [100]
4: (fly plane1 city2 city4 person1) [4] [10]
6: (fly plane2 city1 city4 person3) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person2) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city4 absent)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 8 100 8
Goal      -> 0 0 0
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city4 absent)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 8 100 8
Goal      -> 0 0 0
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city4 absent)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 8 100 8
Goal      -> 0 0 0
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person3) [2] [100]
0: (fly plane1 city0 city2 person1) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person2) [2] [100]
4: (fly plane1 city2 city4 person1) [4] [10]
6: (fly plane2 city1 city4 person3) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person2) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person3) [2] [100]
0: (fly plane1 city0 city2 person1) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person2) [2] [100]
4: (fly plane1 city2 city4 person1) [4] [10]
6: (fly plane2 city1 city4 person3) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person2) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV

\section{Mersenne-Twister}
4131483249 3425522657 497714210 3897924285 2994170045 3584412318 3837821013 2962925835 2848958365 2881297952 2775199273 3929121222 726246130 1169695957 2844195944 3892015180 3058652446 892391663 347077096 2623615871 1315015327 3887681496 903118975 2856420389 2964055615 1841083002 1380922243 1939231428 1863885864 3990762459 1945097150 4100637410 1070148076 3527281469 4245682454 1947980377 1076463401 3631474602 1238358689 2835380479 3175192561 680439860 73833037 776701674 3890873014 3261680649 2366276004 978010784 1089317650 3223411763 3458864676 2207995075 2006083395 465738796 766966771 2562870689 1422265275 1895701478 4281614959 3981957856 1686776180 1386410375 99774994 4022309038 3759223016 3876214041 3681337354 1232543829 1749572021 2372448774 1635876061 2811370323 3661560837 79444072 4287234801 4920094 1350747994 1642800205 2263828800 2662865476 1611652166 2332908551 92821392 1635853015 664665287 4031507472 1136080935 2304632845 2291058407 708648690 40894347 3226689004 1016355568 2372748819 4138626102 2793997210 34553396 3708846405 1726786030 4274507073 1280480881 2203792002 310027769 2682721175 1252362089 350093580 971154149 3681384658 2337200462 2912724177 1590343436 615245224 2382514058 383003003 388159708 1528483467 648032059 51479476 3396706859 3120059033 2030420019 914389518 791366311 395984696 609251596 1893589679 1937454234 65653110 3109535072 2885300689 3303053650 3748302509 2407821389 1238393838 899028645 3426564667 4080181677 2806212432 1916124217 1961964374 1290602530 2819597797 2860496280 3796269628 135806574 2553445055 1846851288 592395919 3960016399 2019272968 2010494415 1947482325 3919240975 2020543882 2875623219 3113780756 97693784 1924446155 3099513710 1805432434 1507791004 2569043949 3563488582 4252667337 4053538361 3341537914 60875441 3221781743 728745537 561078468 3153781789 3059371866 2133887686 517916569 1768786644 2884769712 1089741154 2186086403 92429972 1600638867 3873656531 1361873596 899384899 1381181201 3145451531 116107062 3945542367 1686678576 4160720004 2602043127 539953282 1567397470 3383158168 47235625 3601104474 537760805 1836389541 2184821430 1198463501 3022738211 2534868661 1387846968 1220269793 119216398 3534896682 151579709 397359504 2090371796 2574578230 3459542071 206697696 3324547847 2286311511 829495648 793542679 842116637 4280345559 3983198626 3289071323 4023697244 152079488 2707117347 447262278 2633367562 1414468505 853697312 728654545 402159420 54415432 39474271 3591088147 3058213641 2421238384 719144109 251511394 288311037 2076284616 3801927985 3960231367 1092699011 842881954 2049447397 1700746106 1266215517 3248892368 1174555215 2844217319 1410918945 3314373416 4204417049 2070785178 982666889 3866005412 637129825 1083864343 393629043 2531487170 2415009493 1727892358 3926103445 1134867152 3530371551 2143909043 945339497 4293542392 2844217741 1143154546 443865117 2934098040 476123161 547527143 2786964667 2903043458 1334097621 3791221130 2666532973 1468684976 4257309399 3754873191 235682889 1717275864 213458838 3173549879 4106943315 3672502949 1796123787 1162941275 876934540 1248139088 839242876 2492877501 1276106949 1623463991 1552428227 3321035225 785972412 3300285912 878979718 2239034875 433609851 3815823365 581040415 3250817879 568359360 113979876 3020807512 2979289413 2971200473 578862859 3034157359 3731216977 439455080 3356709036 1595829966 3818551527 1152853851 2841088909 2830871315 380906459 1868964772 4144429776 2190579740 2791643445 3015366645 281121335 2810641179 1727665777 752881780 2805518200 1690489678 4149882131 2666113603 3935711661 3687347967 105919279 2819908720 3428868988 1372573072 1263364381 703151697 3319114083 4085762031 3853106153 1934515432 1455101364 3758365638 3515970631 2178678099 2220296949 2210094091 3654450667 1519510892 269089280 645631084 872240253 876948373 1142968423 1761652819 629707865 2926114380 710765352 1180661286 3999254459 1901145867 1800793541 3625512943 3712071927 1111996592 4072378292 2748632424 4236138117 2391936313 500371979 3712479263 3250963057 2481025976 228461148 799426542 2011429975 3268075 3564547565 2089891331 1256387339 2051274932 645108096 3666989228 1612035941 2586957477 1638311847 498948315 1206992545 3531775284 2682189064 1120713406 3668918723 2430752707 3819245725 2499905773 2762619274 4167044584 2222938087 2324946982 1869334812 1992806461 3670811044 414925637 1987678324 554046904 3880251703 2597973144 3828070174 2772399207 1819004698 4161759545 338968062 1488355060 1018881947 3001111610 2937608028 2182142953 1290374832 3484757065 2134791876 3841724908 1341970955 3866287000 2045682562 3511568799 1048157130 474441149 824547586 338029992 3300430463 2628632846 2971620308 3729212325 2190469340 944930581 2639174972 875709064 4143728527 3700862592 3557969870 4007282767 3774037778 2681528897 3534053694 3652766556 599939067 2288789050 93763988 1035164356 2101820293 1937263486 1180263105 3266545293 2763162470 1187157866 270063140 4074208014 1636276915 295876554 437331205 3130128910 282503191 1772283581 3132209239 1168057621 399657402 2012610371 792565218 174327155 2995248956 239066900 4005579782 3881757036 2229635085 295327124 451181007 1795852044 3523772789 3409675767 3546656041 3251280811 3334215828 1491588029 2664688268 3795025905 1238909882 3947866366 3347002304 3436096138 3477406983 592522518 624619289 967275538 2735765923 2541444721 1866119043 3981864505 935334022 2722417927 3298482862 4292916727 1188980912 291229144 3225321490 955438936 2885785665 324956768 3552541011 2055874016 1310346529 1721928715 3398359013 2030844703 2873960336 1575907217 1137008312 3718304901 2128984206 3722820194 4192556236 2236990438 4116402203 996580434 2101511997 746127942 2123659071 2535715157 3736820543 1762532365 480831410 268684395 3231189914 2216748059 2653216916 3985727996 2631805246 4015337972 3753545109 739219308 657130839 98301204 2913984125 1560001983 2761816705 2495857091 1509959516 320228869 2594664516 4229889609 3300871906 1882904886 3469335944 2443335394 2909811471 2265086 3545161841 302173066 3066384395 1479992201 311723307 3044955313 3678383358 2883360783 757710503 3591863114 3283808988 718944834 3793636353 3939734487 175601527 3769822604 2281075430 4021364609 3581291193 2075915789 3398765434 2934316572 2823542418 1290176841 1265007929 1485092368 253252218 3077255584 2100740087 3063983745 3406939109 2669346902 153382384 1300085791 2751207855 781599739 2825146072 1215426070 1402223608 2777897051 3687873091 1321321606 2420851432 1909684182 300537869 2451037019 2253041779 769639168 14805842 2671728229 1638299845 4017974697 3485900238 2199267808 1652611902 274238701 2356041989 1148092508 588532726 2172633028 185326115 198485525 462473712 2039749631 1751979188 26023802 411 213 0 0
