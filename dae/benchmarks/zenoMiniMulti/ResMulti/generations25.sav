\section{Parser}

######                 General    ######
# --help=0                                 # -h : Prints this message
# --stopOnUnknownParam=1                   # Stop if unkown param entered
# --seed=1129130130                        # -S : Random number seed

######    Evolution Engine        ######
--popSize=50                             # -P : Population Size
# --selCrit=NSGA-II                        # -S : Pareto Selection Criterion: NSGA, NSGA-II, ParetoRanking
# --nicheSize=1                            # Size of niche for NSGA-I
# --selection=DetTour(2)                   # -S : Selection: Roulette, DetTour(T), StochTour(t) or Random
# --nbOffspring=100%                       # -O : Nb of offspring (percentage or absolute)

######    Output                  ######
# --useEval=1                              # Use nb of eval. as counter (vs nb of gen.)
# --printPop=0                             # Print sorted pop. every gen.

######    Output - Disk           ######
--resCPT=resCPTMulti                     # Directory where to store CPT intermediate files
--resDir=ResMulti                        # Directory to store DISK outputs
# --eraseDir=1                             # erase files in dirName if any
# --frontFileFrequency=1(0,1)              # File save frequency in objective spaces (std::pairs of comma-separated objectives in 1 single parentheses std::pair)

######    Output - Graphical      ######
# --plotFront=0                            # Objective plots (requires corresponding files - see frontFileFrequency

######    Persistence             ######
# --Load=                                  # -L : A save file to restart from
# --recomputeFitness=0                     # -r : Recompute the fitness after re-loading the pop.?
--saveFrequency=1                        # Save every F generation (0 = only final state, absent = never)
# --saveTimeInterval=0                     # Save every T seconds (0 or absent = never)
# --status=multiTGV.status                 # Status file

######    Stopping criterion      ######
--maxGen=50                              # -G : Maximum number of generations () = none)
--CtrlC=1                                # -C : Terminate current generation upon Ctrl C

######    TGV                     ######
--typeRisk=2                             # Risk computation from partial values (0=risk after compression, 1=max of partial risks, 2=avg of partial risks)
--typeMakespan=1                         # Makespan computation from partial values: 0=global only, 1=sum(partial), 2=0+1
# --factRisk=10                            # Multiplcative factor for the risk (w.r.t. penalty for failures)
# --factMakespan=1                         # Multiplcative factor for the makespan (w.r.t. penalty for failures)
# --useGlobalGoal=1                        # Use Global goal to define the intermediate stations (1) or not (0)

######    TGV - Variation Operators    ######
# --mutAtMutRate=1                         # Relative rate for AT mutation
# --mutFailMutRate=1                       # Relative rate for Fail mutation
# --weightModifyPredicateMutation=3        # Relative weight of 'modify' mutation inside eoTGVAtMutation
# --weightAddPredicateMutation=1           # Relative weight of 'add' mutation inside eoTGVAtMutation
# --weightRemovePredicateMutation=1        # Relative weight of 'remove' mutation inside eoTGVAtMutation
# --weightModifyPredicateMutation=3        # Relative weight of 'modify' mutation inside eoTGVAtMutation
# --weightAddPredicateMutation=1           # Relative weight of 'add' mutation inside eoTGVAtMutation
# --weightRemovePredicateMutation=1        # Relative weight of 'remove' mutation inside eoTGVAtMutation

######    TGV - general           ######
# --debug=0                                # Level of output (0 = nothing)

######    TGV - init              ######
# --minSize=2                              # -m : Minimal size at init
# --maxSize=10                             # -M : Maximal size at init
# --maxDist=3                              # -d : Maximal distance between stations
# --avgNbAtChange=1.5                      # Avg number of changes fir each predicates in atInit (>1)
# --pAddRemovePredicate=0.2                # Probability to change the 'present' state in init and mutation

######    TGV - problem           ######
--csFile=commonSenseZeno.tgv             # Name of the 'CommonSense' file
--attFile=DataMulti/attributeSpacesZenoMiniMulti.tgv # Name of the attributeSpaces file
# --reachableFile=                         # Name of the reachableValue file (empty string if none)
--instanceName=DataMulti/zenoMiniMulti.pddl # Name of the instance (PDDL file)
--domain=DataMulti/domain-zeno-time-miniRISK-Sym.pddl # Name of the domain PDDL file
--nbBackTrackMax=1000                    # Max Nb of BackTtracks (CPT option -bk)
--boundSub=0                             # Bound for suboptimal search (CPT option -sub)
# --maxRisk=3                              # Max level of Risk (in case of failure)
# --useCausals=1                           # Use causals during final compression?
# --useActions=0                           # Use all actions of intermediate solution when compressing?

######    Variation Operators     ######
# --typeAppliOp=PropGA                     # Apply cross and mut Proportionally (PropGA) or sequentially (the standard SGA)
# --wCross=1                               # -C : Weight of Crossover
# --wMut=1                                 # -M : Weight of Mutation
# --wClone=1                               # -L : Weight of Clone operator

\section{eoPop}
50
8 1000   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city4 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 4 10 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
; 	(at person3 city0 absent)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city2)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person3) [2] [100]
0: (fly plane2 city0 city2 person2) [4] [10]
2: (flyvide plane1 city1 city0) [2] [100]
4: (fly plane1 city0 city1 person1) [2] [100]
4: (fly plane2 city2 city4 person2) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (flyvide plane2 city4 city1) [2] [100]
10: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person3) [2] [100]
0: (fly plane1 city0 city2 person1) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person2) [2] [100]
4: (fly plane1 city2 city4 person1) [4] [10]
6: (fly plane2 city1 city4 person3) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person2) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 4 10 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city2)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 4 10 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person3) [2] [100]
0: (fly plane1 city0 city2 person2) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person2) [4] [10]
6: (fly plane2 city1 city4 person3) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 4 10 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person3) [2] [100]
0: (fly plane1 city0 city2 person1) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person2) [2] [100]
4: (fly plane1 city2 city4 person1) [4] [10]
6: (fly plane2 city1 city4 person3) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person2) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV

\section{Mersenne-Twister}
1545506674 3045745752 250395553 473420834 1572660426 135061506 3272647635 48363711 3206505122 1032394355 1035168352 2634148954 3685880936 436273719 3700498271 3316358035 1208909213 587463396 1138406699 917977785 638638655 69233118 1561395284 2367506648 979986959 1958193599 132282704 1590490830 1834415283 134261145 700737532 2193770880 3475199482 2262251826 2913296164 137822783 2479886935 1944909533 1275316467 3511586844 95859514 1342517715 2841924059 807773371 1859821693 3128513521 614076112 2705208213 2579877717 1048411801 2548890948 2053457123 2329186905 182082538 2472027055 125373658 976452435 3089348061 1203526815 2398605091 751169449 2158724021 2242567768 2600704171 3366483766 31679179 4126400326 1067836388 1320839584 1137186257 463802589 1671989765 705339603 3437381093 964264689 422504193 3727812178 2370217922 1557136435 1130037586 2804530071 323200195 786054045 2376963476 2015977877 3111380741 4070399227 2064381297 2534888005 3855963872 3523032667 2636814466 670170817 3164780921 3680034460 4155662858 879788288 259552179 1449794354 6740014 2920750997 2221229045 2920224694 1203310436 2634123974 653613357 1524953938 2728283976 1525013887 1447958406 3401852084 3825540646 329635609 1338390950 1366751679 1559700351 1906310192 3932032664 3752393735 1606327274 447358603 1012407369 1234474505 2887496897 3242862236 646259141 3201490221 1617474381 416337834 3002256359 2432457291 4271528517 3365884747 929883246 2652554845 4240253480 65049275 1757169565 4274377014 742469965 2614795137 461138093 3638120191 2812670390 2976383204 3423303312 1143335917 367888938 767446902 4082705362 1508032256 4093449331 1686503460 1779262755 3762251292 3124376903 694455682 1657978923 1991290394 1562608547 2760015811 4147082598 1558246480 2022302282 4016616102 2299027809 3599893025 3078584273 4051886737 3804318935 1009266677 122066248 2325610545 3794090221 3641907931 3257566588 2036025965 3485525493 3273849125 157544846 1098843709 507192708 4074168200 2498404431 2950200753 2228010243 41093400 1367744726 2952398301 3023734905 146509765 1983839352 111298894 3207337517 714073289 3644555589 908565004 3885381807 1965048968 3356438148 65299041 1266879371 773209618 1953073650 3536789214 3245211438 1919300244 818525915 1706870431 42652393 1096603692 1318790883 3384593057 3672177675 589853810 2452247210 1119237543 906766466 1255409690 3545943009 277704699 2726597540 2158841948 2751657562 2825173081 3388911853 44219780 3515800129 4251332357 973486321 3338465331 411174279 795322533 801758955 2918634810 4017508844 1538763806 815063625 2042708862 526054868 3025230238 3003001278 3429824885 716508247 693898953 1395834190 435121007 4196445487 2672975335 1358377445 1983675186 4170955306 1086753194 4168336045 2324278965 1546199194 4185719828 312381926 2406403193 4003454478 2738835807 622864277 717420624 2228027335 3646189610 3041772132 218906944 1631589136 1193031558 3108175774 3642711029 3610744065 1895179130 2787251918 3891265133 1785628812 3713006440 2823563443 1560869624 3861112532 2947673319 2938345614 4244209397 3348824283 979104164 1884776233 579602848 1579699005 1657418106 2869315258 4171468878 4081864348 3832668686 377209104 189972878 3214794343 4158334566 2108792049 701195715 4045914244 692456968 2636564233 618179901 4109520351 3275046357 2651195042 3890689404 1491661671 4246674545 3915218901 173767633 119635541 4041661892 1084626739 109556160 3543117554 2081567594 3096715639 3566225867 3981667002 2896403338 1932086635 21778929 2991524721 2583384641 700146423 2975762466 146763500 3685195650 3976517564 1450837362 1484361920 3053062079 2202369617 3989885125 639435991 385862170 3347268420 1020410981 2109885528 318125929 2139796985 2324354466 957894869 4220605873 2983532207 312870371 3908659190 316561426 931707171 4028551929 2872553179 545469770 2324985802 2297122721 392583634 3013828588 1439438869 309163471 804074883 274743533 3055551239 1957238882 2626640562 120073770 932501331 2918784410 2210818720 3694214634 1373786696 3389947753 612026537 2568510397 4120245182 1612536225 1236350257 1012198943 3444119595 1063804872 791160322 407434586 3878775013 2036532037 2654952926 2453520416 2407462846 1167151193 2027736274 3372960979 1863749953 18558450 188826855 1720420098 2805291468 3043739235 3824237623 1186872158 2087034379 1077234172 1924331295 967383255 4046497682 1810039300 2406452014 3503461232 2995547650 655717779 2595733137 2118701697 4129939583 426045177 3794019601 1151123965 3384119895 403517512 4014844578 556052412 3774859047 3215858262 1030386023 3399683689 2831812096 3040811296 2132838571 3160373771 1668305713 4177024100 14256639 4136636896 251383866 3063286662 3383840437 2583599478 2097183572 327887379 3359079867 138204041 4205916500 3030159454 119052282 274943320 2564272428 2656909324 2328613540 2423267157 3091629795 903622363 4294347499 2911635631 2860037859 2547333552 307549515 4057157376 1910373986 552627340 4141036916 3804014731 3503064780 2024159927 370267420 3704587213 4013073743 1050674479 400521294 1067827800 3156193827 1414334051 3506621075 1640975744 387608304 2526284678 482448909 2499991616 4128635252 4175838999 1309731430 978036472 321512392 1865361179 3477919560 3315776691 2196511599 149998939 1982164673 3771907721 2329335585 749600877 1285526625 3961348362 3729108936 128730231 1292763872 4109535620 3068129922 900332035 3282331753 893646765 193088728 1134753030 1968513055 611329706 4266686237 1558323889 2153083358 3696891555 18094436 1595320156 3364321741 3566511189 981678521 1973612195 1321628907 3146062240 426068591 1155654548 313718345 1943123237 3788422832 146380524 992016995 422194486 487418183 4101790306 371012411 520680367 1865169764 571788906 2231191119 1048189367 3809618487 3860288756 543118150 3323930918 1185433533 3561205190 2133507524 3940596656 2661736755 359203028 2672461480 2848077814 772052837 1637812656 766540186 308104690 2584635046 3342667625 2520879561 414473110 388586794 2104056214 2303234609 538662271 812779618 2149222561 3398072092 873111788 3873924194 283502458 3684123799 4004919541 1575531974 4290418368 1215614725 961617496 950917209 2612373678 1637161496 3419359004 745447418 3101920426 3246310637 1156030832 1083103490 977184244 556410948 3079322213 160531026 3722227763 3697676213 3277934481 3108091339 1507054947 2194599752 672493491 2682444424 1379773584 2082101666 3298394267 279162554 4231237807 1755614186 1906443071 2052905973 1862770943 2119843221 1176255345 2206064151 4271770092 479464060 1605377053 3678557851 3625600181 1651082600 3382836313 3399358927 3628860346 2010932439 906253529 3086338262 2676737158 547582413 574249754 169782178 1090679746 1674874065 1230526764 2427947839 39338562 1296771818 2509651476 4050235946 1538351637 682720487 282 342 0 0
