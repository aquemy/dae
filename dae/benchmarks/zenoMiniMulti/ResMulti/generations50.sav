\section{Parser}

######                 General    ######
# --help=0                                 # -h : Prints this message
# --stopOnUnknownParam=1                   # Stop if unkown param entered
# --seed=1129130130                        # -S : Random number seed

######    Evolution Engine        ######
--popSize=50                             # -P : Population Size
# --selCrit=NSGA-II                        # -S : Pareto Selection Criterion: NSGA, NSGA-II, ParetoRanking
# --nicheSize=1                            # Size of niche for NSGA-I
# --selection=DetTour(2)                   # -S : Selection: Roulette, DetTour(T), StochTour(t) or Random
# --nbOffspring=100%                       # -O : Nb of offspring (percentage or absolute)

######    Output                  ######
# --useEval=1                              # Use nb of eval. as counter (vs nb of gen.)
# --printPop=0                             # Print sorted pop. every gen.

######    Output - Disk           ######
--resCPT=resCPTMulti                     # Directory where to store CPT intermediate files
--resDir=ResMulti                        # Directory to store DISK outputs
# --eraseDir=1                             # erase files in dirName if any
# --frontFileFrequency=1(0,1)              # File save frequency in objective spaces (std::pairs of comma-separated objectives in 1 single parentheses std::pair)

######    Output - Graphical      ######
# --plotFront=0                            # Objective plots (requires corresponding files - see frontFileFrequency

######    Persistence             ######
# --Load=                                  # -L : A save file to restart from
# --recomputeFitness=0                     # -r : Recompute the fitness after re-loading the pop.?
--saveFrequency=1                        # Save every F generation (0 = only final state, absent = never)
# --saveTimeInterval=0                     # Save every T seconds (0 or absent = never)
# --status=multiTGV.status                 # Status file

######    Stopping criterion      ######
--maxGen=50                              # -G : Maximum number of generations () = none)
--CtrlC=1                                # -C : Terminate current generation upon Ctrl C

######    TGV                     ######
--typeRisk=2                             # Risk computation from partial values (0=risk after compression, 1=max of partial risks, 2=avg of partial risks)
--typeMakespan=1                         # Makespan computation from partial values: 0=global only, 1=sum(partial), 2=0+1
# --factRisk=10                            # Multiplcative factor for the risk (w.r.t. penalty for failures)
# --factMakespan=1                         # Multiplcative factor for the makespan (w.r.t. penalty for failures)
# --useGlobalGoal=1                        # Use Global goal to define the intermediate stations (1) or not (0)

######    TGV - Variation Operators    ######
# --mutAtMutRate=1                         # Relative rate for AT mutation
# --mutFailMutRate=1                       # Relative rate for Fail mutation
# --weightModifyPredicateMutation=3        # Relative weight of 'modify' mutation inside eoTGVAtMutation
# --weightAddPredicateMutation=1           # Relative weight of 'add' mutation inside eoTGVAtMutation
# --weightRemovePredicateMutation=1        # Relative weight of 'remove' mutation inside eoTGVAtMutation
# --weightModifyPredicateMutation=3        # Relative weight of 'modify' mutation inside eoTGVAtMutation
# --weightAddPredicateMutation=1           # Relative weight of 'add' mutation inside eoTGVAtMutation
# --weightRemovePredicateMutation=1        # Relative weight of 'remove' mutation inside eoTGVAtMutation

######    TGV - general           ######
# --debug=0                                # Level of output (0 = nothing)

######    TGV - init              ######
# --minSize=2                              # -m : Minimal size at init
# --maxSize=10                             # -M : Maximal size at init
# --maxDist=3                              # -d : Maximal distance between stations
# --avgNbAtChange=1.5                      # Avg number of changes fir each predicates in atInit (>1)
# --pAddRemovePredicate=0.2                # Probability to change the 'present' state in init and mutation

######    TGV - problem           ######
--csFile=commonSenseZeno.tgv             # Name of the 'CommonSense' file
--attFile=DataMulti/attributeSpacesZenoMiniMulti.tgv # Name of the attributeSpaces file
# --reachableFile=                         # Name of the reachableValue file (empty string if none)
--instanceName=DataMulti/zenoMiniMulti.pddl # Name of the instance (PDDL file)
--domain=DataMulti/domain-zeno-time-miniRISK-Sym.pddl # Name of the domain PDDL file
--nbBackTrackMax=1000                    # Max Nb of BackTtracks (CPT option -bk)
--boundSub=0                             # Bound for suboptimal search (CPT option -sub)
# --maxRisk=3                              # Max level of Risk (in case of failure)
# --useCausals=1                           # Use causals during final compression?
# --useActions=0                           # Use all actions of intermediate solution when compressing?

######    Variation Operators     ######
# --typeAppliOp=PropGA                     # Apply cross and mut Proportionally (PropGA) or sequentially (the standard SGA)
# --wCross=1                               # -C : Weight of Crossover
# --wMut=1                                 # -M : Weight of Mutation
# --wClone=1                               # -L : Weight of Clone operator

\section{eoPop}
50
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city3 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 4 10 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city3 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city3 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city3 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city1 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city4 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city3 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city3 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city1 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city4 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city4 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city3 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 4 10 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city3 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city3 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV

\section{Mersenne-Twister}
133745598 4031105265 2041853017 2574019378 1770766934 3924789355 444691813 571226271 2281607439 995036390 2171996165 3235041650 2898563425 2096755479 1861787652 1093609410 2793399492 2337960382 4138644537 440486450 1410996180 4201156443 1808363041 1441291033 1580783208 177023714 751418606 3488180489 2873479204 385623936 2693910853 4075046437 544160889 1767802911 3273320240 3141949894 3186878639 2492357706 3438847048 1720464743 1986291502 2761255295 2628777914 2735238362 2964781647 3169225208 3129664917 3061442494 3476201537 90124686 2748998 863118266 3671967295 3591837092 2522855940 2040510925 342489285 967862699 2988704638 890080792 111508090 921482300 831690755 1648607451 1245220243 419265913 1953488706 2294274741 2737111573 616676128 2574239137 1131741832 3525111046 2650346 3037939916 872428852 1571664075 2943123812 980921956 1373880363 1200379755 3468524626 3028279771 342377153 4078770653 884323752 2687644016 2319357960 4128363890 2213646873 3900290945 852980589 926797742 3639731282 2410725961 3425120107 185439461 1317061940 4070504323 774193958 299249515 3225428042 585579356 4215482235 3125367506 3030837801 439575955 3415968345 3067408941 4139952042 4133835325 3214362478 589757453 314862418 2029028146 230382127 1647020248 2747072717 2939777105 3047824371 2735672536 2692797460 113536317 2791893485 430862744 4256876272 753328064 920061440 3530998566 8827499 1032034226 238683323 3969500663 3985062544 1052525589 1258735019 1178594682 295700419 3422737832 2782625876 2434707317 1260301769 2583348833 1523811059 3131109986 3391949592 3467296535 3967558167 3490000957 2489851197 3196071801 4264538704 1381738461 3542112310 1961901326 1649954823 1725784372 1286213017 1206191669 1942399131 4228315835 2961841572 3281482329 1290742435 807782891 813555962 1102275610 2314704126 439794081 416424378 715818142 332681651 4069233512 2885791147 32307348 3755732964 3423586024 426608143 3617651175 1522247955 632960179 2501870568 3292901278 2451038051 2280401694 1827477477 417069540 422171258 448010920 1323877525 918964154 3714012760 3960053531 388980459 824499108 2040081482 2593113682 3278186159 1603056028 2168636979 591725348 992065733 1115999248 685910503 830151108 1946966971 3107135247 455425159 3371113114 2502537690 4222415056 1921505273 1292788006 814206815 1423481574 2934000242 1330553342 3182407835 4281698037 4105792109 3005601066 1005832834 4024041548 2572390111 63165757 1014519239 1663798225 1022514722 1283291988 672865764 2997223481 2389518437 316115031 3565035011 1900691913 2561319473 1141244330 3588256892 4278187850 316072132 1136623105 2872632269 693581427 1485688968 1828382447 3051057381 327513218 3912532821 3976400020 3394476224 2364335138 3876889143 4135122274 3952537243 2556830817 2307382161 1805569926 4282929650 1047550374 2272448563 2832037960 3693315903 2374030318 1055213404 1888544556 2296174797 619291621 2682726983 483199672 1261144272 361586437 3893997007 1925498671 4156392172 1689202778 2831768881 1504156338 3270528566 3661127809 1526558605 2849315376 4237467879 1274389390 332912884 2598863346 3893801261 3263625018 1501803060 424997548 582066733 991186581 860014813 1234507554 1522052730 2730212476 2080857256 1671740925 1473839979 3790975758 107236069 4194364342 1327738104 3573870207 773513500 2209765439 4168958790 3782728980 4083335836 674628403 3190830645 1792912016 803704424 3765623183 445604517 1360182986 1074719208 3160052597 172296364 3116753736 597317266 2901611637 289703404 1894018024 2674460179 329904005 4114321641 3469759575 3656957126 1591701949 3197236065 1556879133 1023541213 2346002572 599987609 872500935 2294148303 2331964329 3070837739 419348367 1336902626 3045498593 1248842009 1676036248 2353080600 741749890 264670742 569497866 1667967886 2395870130 3371038669 2502370268 1432129099 992168973 1210115535 4207006729 1536667893 1132413371 1701759551 2574064023 2204374823 3684647558 2436336441 1819407965 3258816085 1852564178 3620656322 2018484923 1150543586 2085236609 772175961 1361230698 3475869312 380963428 2892492669 2264713315 2688311750 4268379702 2281732128 2640048112 3029426494 2845629395 1092120102 2663719877 2498188833 2249161922 4163051525 899781743 1938854649 2427219900 4047883870 3522515811 389466852 1323858504 2155110415 1619563536 600638324 2665489626 2570716585 695865718 1379351143 4190735505 1967180040 3617163378 3796165291 2243378900 3140032276 3775835436 2481865045 1045854127 277751271 2929361781 3456048936 2217755888 4025319315 3624126846 1186505995 2105512756 967330324 4262238130 3915342220 2180332066 2664269622 3421270176 425421631 3869359578 610510550 1437749975 1517693493 242475409 869006700 3941325642 1475757492 276872107 2270221924 2862995848 4186856881 2472599281 2670076525 2450481650 3653214846 275366326 1066722083 1021806354 2993272517 3948741700 1167573289 3877624776 696239559 1564132663 3900992156 303199585 2311703226 2931408837 3540590292 1856748464 862462240 916682477 3949670734 535220336 1578758403 63581958 1524766329 1421363324 2721113286 3584492114 2362448245 2882964129 1489814571 2606625642 2431436875 758786121 3867081015 3410830 2685256169 3285847215 3673986552 253982169 3226510824 1725957013 3397702788 1373829882 740375818 602349542 3555004642 680122409 912469907 1366669856 2876837069 3498810192 1317419313 1395699114 3111005700 3423638692 4076808418 3581810374 146174765 2991850471 1282986713 852263969 4282727470 204101462 1772949877 760848755 2586369537 3956945166 872559881 705072977 1263887879 2041213514 2843333601 4244305340 1573126157 184882525 2102204167 1617178050 508501649 3872868379 1201686865 2980263563 2926639577 3224718906 1486905230 666075683 3230557643 2980230104 3548823748 4080651639 732130131 917255439 1244792192 2353914779 2964567952 1909662167 1008367218 2727332126 1691613362 2087231352 2890969564 340024563 364916280 2936773305 1597218107 2782275094 2809681824 1035147228 3254902822 4159372007 545849510 73140810 221234960 4232832088 4108702535 562119941 1490064094 2282973156 2863137185 1633354774 775440841 3273250800 3627371794 1222187218 2632054339 388230195 2539829468 3169038439 1285425333 901448634 2285395775 2625710241 2081855749 3984677414 3153084246 848487760 4177902934 4177079419 1189178789 1494657756 867085903 3487730467 2511676813 3417535816 1939688078 1384411538 1786342502 3183438769 2983815284 3576100031 2550401951 1179388500 3513498625 2858967848 3971399468 374270666 576668237 3896468308 3228994173 2888908983 1620259791 2502338193 3402255357 2077528645 1483541558 2493897236 3501491294 2334632278 1397333429 3713776202 1798835761 2404437435 2183069721 3200990487 142981549 2621290274 1498618472 2572632946 2130603865 4138400666 2507637868 889981896 1295563395 1979416296 1237811701 3350374437 3709616389 168 456 0 0
