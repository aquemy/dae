
### GENERAL ########################################################################
# --help=0                                 # -h : Prints this message
# --stopOnUnknownParam=1                   # Stop if unkown param entered
# --seed=0                                 # -S : Random number seed

### EVALUATION #####################################################################
--bmax-init=1000000                      # -B : Number of allowed expanded nodes for the initial computation of b_max
--fitness-weight=15                      # -W : Unknown weight in the feasible and unfeasible fitness computation
--fitness-penalty=1000                   # -w : Penalty in the unfeasible fitnesses computation
--bmax-fixed=1000000                     # -b : Fixed number of allowed expanded nodes. Overrides bmaxinit if != 0
--bmax-last-weight=1                     # -T : Weighting for the b_max used during the last search towards the end goal (must be strictly positive)
--bmax-quantile=0.5                      # -Q : Quantile to use for estimating b_max (in [0,1], 0.5=median)
--lenght_weigth=3                        # -H : Weighting for the optimizing lenght during the search
--cost_weigth=4                          # -U : Weighting for the optimizing cost during the search
--makespan_max_weigth=2                  # -Y : Weighting for the optimizing makespan_max during the search
--makespan_add_weigth=3                  # -V : Weighting for the optimizing  makespan_add during the search
--astar_weigth=10                        # -O : Weighting for the optimizing  A* heuristic during the search
--rand_yahsp_seed=1                      # -X : flag  for the random initilaization of yahsp at each optimization
--bmax-increase-coef=1                   # -K : Multiplier increment for the computation of b_max
--bmax-ratio=0.01                        # -J : Satisfying proportion of feasible individuals for the computation of b_max

### EVOLUTION ENGINE ###############################################################
--popSize=30                             # -P : Population Size
--kappa=0.05                             # -k : Scaling factor kappa for indicator based search
--rho=1.1                                # -R : reference point for the hypervolume indicator
--indicator=Hypervolume                  # -i : Binary indicator for IndicatorBased: Epsilon, Hypervolume
--rho=1.1                                # reference point for the hypervolume indicator
--kappa=0.05                             # -k : Scaling factor kappa for IndicatorBased
--updateArch=1                           # Update the archive at each gen.

### INITIALIZATION #################################################################
# --insemination=0                         # Use the insemination heuristic to estimate b_max at init
--lmax-initcoef=20                       # -N : l_max will be set to the size of the chrono partition * this coefficient
--lmin=1                                 # -M : Minimum number of goals in a decomposition

### LOGGER #########################################################################
# --verbose=quiet                          # -v : Set the verbose level
# --print-verbose-levels=0                 # -l : Print verbose levels
# --output=                                # -o : Redirect a standard output to a file

### OUTPUT #########################################################################
--plan-file=plan.soln                    # -f : Plan file backup
--resDir=../results/ibeahyper/ariari_3n3t2p/run188 # Directory to store DISK outputs
--eraseDir=1                             # erase files in dirName if any
--printPop=0                             # Print sorted pop. every gen.
--printPlan=0                            # Print sorted plan. every gen.
--storeArch=0                            # Store the archive's objective vectors at each gen.
--printArch=0                            # Print the archive at each gen.
--saveIntervalArch=1                     # Save the archive's objective vectors every T seconds (0 or absent = never)
--printIntervalArch=0                    # Print the archive at each time interval
--storePopVectors=0                      # Store the pop's objective vectors at each gen.
--saveIntervalPopVectors=0               # Store the pop's objective vectors  every T seconds (0 or absent = never).
--printPopVectors=0                      # Print the pop vectors at each gen.
--contribution=0                         # Store the contribution of the archive at each gen.
--entropy=0                              # Store the entropy of the archive at each gen.
--hypervolume=0                          # Store the hypervolume of the archive at each gen.
--EpsilonAdditive=0                      # Store the Epsilon Additive of the archive at each gen.
--printStats=0                           # Print Best/avg/feasible every gen.
--printBestStat=0                        # Print Best/avg// every gen.

### PERSISTENCE ####################################################################
# --saveFrequency=0                        # Save every F generation (0 = only final state, absent = never)
# --saveTimeInterval=0                     # Save every T seconds (0 or absent = never)
# --status=./ibeahyper.status              # Status file

### PROBLEM ########################################################################
--domain=../benchmarks/domain/MultiZeno.pddl # -D : PDDL domain file REQUIRED 
--instance=/home/aquemy/dev/Inria/descarwin/clean/dae/paramils/daemoeo_tuning/benchmarks/problems/zenoMulti/linear/ariari_3n3t2p.pddl # -I : PDDL instance file REQUIRED 
--sequential=0                           # -q : Is the problem a sequential one? REQUIRED 
--objective=Add                          # -Z : 2nd objective to take into account (Add(additive cost )/Max(max cost)

### STOPPING CRITERION #############################################################
--maxGen=0                               # -G : Maximum number of generations
--steadyGen=0                            # -s : Number of generations with no improvement
# --minGen=0                               # -g : Minimum number of generations
# --maxEval=0                              # -E : Maximum number of evaluations (0 = none)
--maxTime=1                              # -T : Maximum running time in seconds (0 = none)
# --CtrlC=0                                # -C : Terminate current generation upon Ctrl C

### STOPPING CRITERIONS ############################################################
# --runs-max=0                             # -r : Maximum number of runs, if x==0: unlimited multi-starts, if x>1: will do <x> multi-start

### VARIATION ######################################################################
--radius=7                               # -R : Number of neighbour goals to consider for the addGoal mutation
--proba-change=1                         # -k : Probability to change an atom for the changeAtom mutation
--proba-del-atom=1                       # -p : Average probability to delete an atom for the delAtom mutation
--w-delgoal=5                            # -a : Relative weight defining the probability to call the delGoal mutation
--w-addgoal=3                            # -A : Relative weight defining the probability to call the addGoal mutation
--w-delatom=1                            # -u : Relative weight defining the probability to call the delAtom mutation
--w-addatom=10                           # -d : Relative weight defining the probability to call the addAtom mutation
--maxtry-candidate=100                   # -y : Maximum number of atoms to try when searching for a candidate in the changeAtom mutation
--maxtry-mutex=100                       # -z : Maximum number of atoms to try when searching for mutexes in the changeAtom mutation
--proba-cross=0.8                        # -c : Probability to apply a cross-over
--proba-mut=1                            # -m : Probability to apply one of the mutation
