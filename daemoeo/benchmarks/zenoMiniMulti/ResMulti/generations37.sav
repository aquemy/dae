\section{Parser}

######                 General    ######
# --help=0                                 # -h : Prints this message
# --stopOnUnknownParam=1                   # Stop if unkown param entered
# --seed=1129130130                        # -S : Random number seed

######    Evolution Engine        ######
--popSize=50                             # -P : Population Size
# --selCrit=NSGA-II                        # -S : Pareto Selection Criterion: NSGA, NSGA-II, ParetoRanking
# --nicheSize=1                            # Size of niche for NSGA-I
# --selection=DetTour(2)                   # -S : Selection: Roulette, DetTour(T), StochTour(t) or Random
# --nbOffspring=100%                       # -O : Nb of offspring (percentage or absolute)

######    Output                  ######
# --useEval=1                              # Use nb of eval. as counter (vs nb of gen.)
# --printPop=0                             # Print sorted pop. every gen.

######    Output - Disk           ######
--resCPT=resCPTMulti                     # Directory where to store CPT intermediate files
--resDir=ResMulti                        # Directory to store DISK outputs
# --eraseDir=1                             # erase files in dirName if any
# --frontFileFrequency=1(0,1)              # File save frequency in objective spaces (std::pairs of comma-separated objectives in 1 single parentheses std::pair)

######    Output - Graphical      ######
# --plotFront=0                            # Objective plots (requires corresponding files - see frontFileFrequency

######    Persistence             ######
# --Load=                                  # -L : A save file to restart from
# --recomputeFitness=0                     # -r : Recompute the fitness after re-loading the pop.?
--saveFrequency=1                        # Save every F generation (0 = only final state, absent = never)
# --saveTimeInterval=0                     # Save every T seconds (0 or absent = never)
# --status=multiTGV.status                 # Status file

######    Stopping criterion      ######
--maxGen=50                              # -G : Maximum number of generations () = none)
--CtrlC=1                                # -C : Terminate current generation upon Ctrl C

######    TGV                     ######
--typeRisk=2                             # Risk computation from partial values (0=risk after compression, 1=max of partial risks, 2=avg of partial risks)
--typeMakespan=1                         # Makespan computation from partial values: 0=global only, 1=sum(partial), 2=0+1
# --factRisk=10                            # Multiplcative factor for the risk (w.r.t. penalty for failures)
# --factMakespan=1                         # Multiplcative factor for the makespan (w.r.t. penalty for failures)
# --useGlobalGoal=1                        # Use Global goal to define the intermediate stations (1) or not (0)

######    TGV - Variation Operators    ######
# --mutAtMutRate=1                         # Relative rate for AT mutation
# --mutFailMutRate=1                       # Relative rate for Fail mutation
# --weightModifyPredicateMutation=3        # Relative weight of 'modify' mutation inside eoTGVAtMutation
# --weightAddPredicateMutation=1           # Relative weight of 'add' mutation inside eoTGVAtMutation
# --weightRemovePredicateMutation=1        # Relative weight of 'remove' mutation inside eoTGVAtMutation
# --weightModifyPredicateMutation=3        # Relative weight of 'modify' mutation inside eoTGVAtMutation
# --weightAddPredicateMutation=1           # Relative weight of 'add' mutation inside eoTGVAtMutation
# --weightRemovePredicateMutation=1        # Relative weight of 'remove' mutation inside eoTGVAtMutation

######    TGV - general           ######
# --debug=0                                # Level of output (0 = nothing)

######    TGV - init              ######
# --minSize=2                              # -m : Minimal size at init
# --maxSize=10                             # -M : Maximal size at init
# --maxDist=3                              # -d : Maximal distance between stations
# --avgNbAtChange=1.5                      # Avg number of changes fir each predicates in atInit (>1)
# --pAddRemovePredicate=0.2                # Probability to change the 'present' state in init and mutation

######    TGV - problem           ######
--csFile=commonSenseZeno.tgv             # Name of the 'CommonSense' file
--attFile=DataMulti/attributeSpacesZenoMiniMulti.tgv # Name of the attributeSpaces file
# --reachableFile=                         # Name of the reachableValue file (empty string if none)
--instanceName=DataMulti/zenoMiniMulti.pddl # Name of the instance (PDDL file)
--domain=DataMulti/domain-zeno-time-miniRISK-Sym.pddl # Name of the domain PDDL file
--nbBackTrackMax=1000                    # Max Nb of BackTtracks (CPT option -bk)
--boundSub=0                             # Bound for suboptimal search (CPT option -sub)
# --maxRisk=3                              # Max level of Risk (in case of failure)
# --useCausals=1                           # Use causals during final compression?
# --useActions=0                           # Use all actions of intermediate solution when compressing?

######    Variation Operators     ######
# --typeAppliOp=PropGA                     # Apply cross and mut Proportionally (PropGA) or sequentially (the standard SGA)
# --wCross=1                               # -C : Weight of Crossover
# --wMut=1                                 # -M : Weight of Mutation
# --wClone=1                               # -L : Weight of Clone operator

\section{eoPop}
50
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
; 	(at person3 city0 absent)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city4)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 0 0 0
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city2)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 4 10 0
Goal      -> 8 100 9
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person3) [2] [100]
0: (fly plane1 city0 city2 person2) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person2) [4] [10]
6: (fly plane2 city1 city4 person3) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city3 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city2 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
; 	(at person1 city0 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city2)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city1 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 0 0 0
Goal      -> 8 100 8
Et au total  12 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city2 person3) [4] [10]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
4: (fly plane1 city2 city4 person3) [4] [10]
6: (fly plane2 city1 city4 person2) [2] [100]
8: (flyvide plane1 city4 city1) [2] [100]
10: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV
8 1000   2 (:goal (and 
; 	(at person1 city4 absent)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 0 0 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
20 340   2 (:goal (and 
	(at person1 city3)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 6 1 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
12 550   2 (:goal (and 
; 	(at person1 city2 absent)
; 	(at person2 city0 absent)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city2)
	(at person2 city4)
	(at person3 city4)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 0 0 0
Station 1 -> 8 100 6
Goal      -> 4 10 0
Et au total  12 100 0
====
=======================================
0: (fly plane1 city0 city1 person2) [2] [100]
0: (fly plane2 city0 city1 person3) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
4: (fly plane2 city0 city2 person1) [4] [10]
6: (fly plane1 city1 city4 person3) [2] [100]
8: (fly plane2 city2 city4 person1) [4] [10]

=======================================
ENDTGV
16 400   2 (:goal (and 
	(at person1 city2)
	(at person2 city0)
	(at person3 city0)
)	)))
 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city0)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 4 10 0
Station 1 -> 4 10 0
Goal      -> 8 100 6
Et au total  8 100 0
====
=======================================
0: (fly plane1 city0 city1 person1) [2] [100]
0: (fly plane2 city0 city1 person2) [2] [100]
2: (fly plane1 city1 city4 person2) [2] [100]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person3) [2] [100]
4: (flyvide plane1 city4 city1) [2] [100]
6: (fly plane1 city1 city4 person3) [2] [100]
6: (fly plane2 city1 city4 person1) [2] [100]

=======================================
ENDTGV
17 373.333   2 (:goal (and 
	(at person1 city0)
	(at person2 city0)
	(at person3 city3)
)	)))
 (:goal (and 
	(at person1 city0)
; 	(at person2 city0 absent)
	(at person3 city2)
)	)))
 
TOUTES LES FITNESSES (makespan, risk, backtracks)
Station 0 -> 6 1 0
Station 1 -> 3 11 0
Goal      -> 8 100 8
Et au total  17 100 0
====
=======================================
0: (fly plane2 city0 city1 person2) [2] [100]
0: (fly plane1 city0 city3 person3) [6] [1]
2: (flyvide plane2 city1 city0) [2] [100]
4: (fly plane2 city0 city1 person1) [2] [100]
6: (fly plane2 city1 city4 person2) [2] [100]
6: (fly plane1 city3 city2 person3) [3] [11]
9: (fly plane1 city2 city4 person3) [4] [10]
13: (flyvide plane1 city4 city1) [2] [100]
15: (fly plane1 city1 city4 person1) [2] [100]

=======================================
ENDTGV

\section{Mersenne-Twister}
977135959 3075160922 211847831 2185535327 2579464170 677063354 1615474324 370800651 4250097035 3056671137 1038784356 743628469 1338576039 2863036616 501064384 2879667628 518649477 1408314075 2339509993 4071959519 4105067391 3922399456 1320091568 1833261699 3767810037 3582378533 1408774470 2227602227 683209526 3677695509 1937589302 3301334749 3060940816 2148345296 3300486746 2895381384 1764380179 1050784942 4291572584 1371424449 3572267929 2987336933 3720844475 1311881172 3585448829 412195716 4109613850 3774123726 379351733 3797848101 2997883162 1603220270 2443636929 1795216884 1866983706 1000472598 1802732923 4160152577 159085511 15132482 2282053271 902585579 1901093075 3308448367 1589287921 1728368881 2208917256 3038890816 4276966317 2261499887 2108415419 3341421147 2932674613 759639056 3075922198 1855295856 422178639 2080503493 4029314030 953529628 773457025 403618242 2832165852 653159000 2106451963 538311753 775391098 2897116920 1753129964 1591611886 3031431190 2946641657 915761360 4167265438 1030173002 699221176 1405391056 898328324 1387025310 2343684895 3780770502 3973728902 1294245688 974708134 3882034885 1844301566 2697635508 3013012214 1159789235 2534213292 1267262601 1999199157 569325838 3553758198 2012859821 1938538118 2411311295 1547913143 2523282712 2375344773 2065027186 3879311878 1595159836 3826720765 2880717824 1869719460 2741639322 3131806617 4079588835 3215114260 3677975088 2777147196 3050922145 3800587641 3061141454 3815178159 3618772386 39252239 3616084084 1292230162 392991161 1188971524 3627141319 2348771747 2520948248 3127935931 2723699233 1733689171 355415094 1377341542 4214900966 1393672737 3674785306 3582090164 3007172701 3284686191 1505370805 3303291173 3175771420 1509178007 4193080152 1788186699 2501026150 4099578961 2071114521 2585282691 2090635397 2989153883 1521542608 2845101448 1103652670 3025754641 3015128334 1716147316 2263947215 2003743192 3111380497 2335379953 2113252204 920274227 1890156672 860067266 1160833554 888555385 197686358 3403793955 1164789110 1014891540 945328240 3652344905 1522582398 4241133240 3739614906 305955629 1879714440 2461055435 2424240363 4062046849 3868460298 4194632042 1310002430 1581413144 4185926105 829361820 1721098521 2805526188 588442574 2185149218 210939899 2509335745 2191772576 3604764447 3624327152 2887023367 1686081257 3046180154 1406994232 2287444579 1437821834 1871483226 540720905 725254715 3015479269 1511023554 2438570769 985890064 3202860148 2212654476 843838904 586407810 277634087 2102117055 1621645440 3548102869 2942577667 3580676052 1640156782 1047653451 494629056 283024472 209003624 2278124503 3117736103 1167142803 223071737 3171401186 3949359068 1047324798 2159272472 1588381034 2075743941 4287402929 2059944910 4204130317 2550282459 3141469279 1795295731 259126168 261038708 2591494976 2813088481 4074168829 2835900314 1728138288 2275234555 2916870257 328859457 1936799443 842236623 378311058 3450101547 252346475 1914155482 288329705 2809806726 2881125476 44355804 1608389109 3091978425 2526629917 3708855087 2484512958 2804779419 2345762032 4130811952 2086556494 1141840236 912270062 1020092360 3296117878 1293149931 1878160283 2002670823 3380362592 3499899393 2988665801 810260035 2620821274 2825150780 4273589709 3169406651 871076745 3760256600 2281568474 1516614163 3326315621 3501177198 3330705219 3539550519 1631790752 3562046678 2616301408 2909559529 111085873 483028260 3432888486 609503356 1170423062 1112504081 3973953728 2430562110 1847995055 3204551891 3261569156 2130281683 176240791 2791929584 2047642136 1978741065 510221279 3107849902 3689519112 2842660923 309356401 1013842013 3424717141 2982281436 2170999481 2065431059 3212994164 3233584134 2322099807 998630272 2698105207 1105914667 1226814376 131338958 1088043009 4022440156 3286873326 835144416 1575688916 443951922 819796689 3466322924 56622042 4183654623 2039397397 2006199724 3272261798 3784835918 3649765254 2886420383 1680607290 4165149511 1225778449 991113848 2419587177 648807671 2650902162 1899269378 2893668182 3670383666 3747735079 1502234437 1032099439 445096731 3820342726 960761298 2124106088 3988514810 619376908 2047186143 1712562882 2623169994 1924821640 1151619901 1548355321 938513362 2122050467 1264384974 1412474697 617750654 2937074614 3840608997 278875383 4156687819 2107138539 779452447 975931750 2102783479 2686827299 3343895564 3273727201 1491555364 1358958425 2173475309 2810023578 943755672 378565661 1411985844 3944720801 2798655 3039549340 2497252341 3393153854 551789416 704339550 2064879921 1909803613 4282479118 1539798120 3536437106 2135811835 545708221 2068438900 2060615948 4004439664 1726488229 1161832934 1225882952 3269437455 2030073835 2155502379 1104037799 2644510327 1885270749 375036381 1188424024 938542432 3321969468 3036464571 344738727 4242014952 2541546923 2294544233 1391306475 2437969016 1708187377 65881451 2835379078 1436411254 1676654054 2925397278 1142051400 3014682746 797044058 1497755414 3948819831 3191610564 4236335239 3421304182 1520590372 1789157897 2203350833 3837087533 160066360 663689441 4162518298 251262060 3250043901 269241444 1766464980 2728675425 1165871661 1547842894 1189583632 3401905483 2255344091 579704398 2643836055 664137357 1053315800 131942333 3573559538 3207956165 2714283825 2798282688 3436582880 431889108 2197078122 2188246617 2930666633 2388485817 544555494 4290537516 208299165 1029517273 1823046276 2630154280 3216348608 3529972366 652090226 1959878232 911528444 1767551706 2331780945 3105374805 100320020 2534474284 445031918 2615467587 3866927559 1309415312 1487498027 3684148893 891299118 2854196260 1240665283 3206997047 2192489887 2659771687 3604577855 2168299157 3219203745 4088355992 2379574894 1907282890 232447062 418916476 2263216162 165202794 3778677766 1421788567 3973975305 4110680121 2884106015 3598973315 382931890 2828842190 2130522090 747984113 1208038745 2173438722 4274749425 4261330743 2487424575 785349419 628533002 3651795403 3243058324 878939166 988744010 4274008053 3729256733 1252680396 158066304 932725512 3729957173 2473983228 583064871 1812248379 3744732892 3397998575 105377190 121217393 3035831994 4009688232 253421758 2370646442 476398589 3729634920 2639061111 1616734779 841264514 4017801936 465894913 227339739 3348285426 39828649 481847367 401059728 4228390452 3550152460 3524123986 3683211909 1602870160 2722046934 1803712701 3414333071 2567082754 1710163998 2452266912 232844144 2992915382 2451678315 854975243 3422287677 2621401665 3052891790 1663484445 3399238819 1585639171 480228070 160108065 2102249253 2419070826 1017484342 1891242017 4236400972 1586267510 955189567 1017798142 3261986953 880310706 3276185990 230749899 3889005456 2855282312 3309438435 2891000437 3554670811 2118496312 869548479 95 529 0 0
